#!/usr/bin/env bash

reset(){ printf '\e[?25l\e[2J\e[H'; }

execute(){
	case $1 in
		poweroff) poweroff ;;
		reboot) reboot ;;
		"exit shell") bspc quit || killall xinit ;;
	esac
}

confirm(){
	printf '\e[%sH\e[2J%s\n\e[2C' "$((p+1))"
	read -rsn1 -p $'\e[1m'"> ${o[p]} ?"$'\e[m'
	case_confirm "$REPLY"
}

case_confirm(){
	case $1 in
		k) ((p=p>0?p-1:2)) ;;
		j) ((p=p<${#o[@]}-1?p+1:0)) ;;
		y|Y) execute "${o[p]}" ;;
		q) exit 0 ;;
	esac
}

printl(){
	for i in {0..3}; do
		case $i in
			$p) printf '\n\e[2C\e[1m> %s\e[m' "${o[i]}" ;;
			*) printf '\n\e[2C%s' "${o[i]}"
		esac
	done
}

case_key(){
	case $1 in
		k) ((p=p>0?p-1:2)) ;;
		j) ((p=p<${#o[@]}-1?p+1:0)) ;;
		l) confirm ;;
		$'\x1b'|q) exit 0 ;;
	esac
}

main(){
	trap "printf '\e[m\e[2J\e[H\e[?25h'" EXIT
	p=0;o=("poweroff" "reboot" "exit shell")
	for((;;)){ reset; printl; read -rsn1 key; case_key "$key"; }
}

main
