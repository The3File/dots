#!/usr/bin/env bash

get_ip(){ wlp=0 
	while read -r line; do
		[[ $line =~ ^wlp3s0 ]] 
		[[ $wlp == 1 ]] || continue
		[[ $line =~ .*inet.*  ]] || continue
		set $line; ip=$2; break
	done < <(ifconfig)
}

net(){
	st="$(iwgetid -r)"
   net="no connection"
   [[ ! -z "$st" ]] && {
      sn=" $(iwlist wlp3s0 scan | sed -n '5P' | awk -F'=' '{print $3}' | awk -F' ' '{print $1}')"
		get_ip
      ((sn>=-20)) && color="%{F#f30}"
      ((sn<=-20)) && color="%{F#890}"
      ((sn<=-45)) && color="%{F#4a0}"
      ((sn<=-60)) && color="%{F#0f0}"
		#net="${st}${color}${sn}%{F-} (${ip})"
		net="${st}${color}${sn}%{F-}"
   }
	N="$net"
}

ws() {
   s=($(xprop -root _NET_DESKTOP_NAMES | awk '{$1=$2=""; print $0}' |\
      sed -e 's/,//g' -e 's/\"//g' -e 's/^[[:space:]]*//'))
   c=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')

   for ((i=0;i<${#s[*]};i++)){ 
      [[ "$i" = "$c" ]] && s[$i]="%{F#00ff00}[${s[$i]}]%{B-}%{F-}" || s[$i]="${s[$i]}"
   }

   export W="$(sed -e 's/\(}\).?\(%\)/\1\2/' <<< "${s[*]}")"
}

bat(){
	acpi=$(acpi | awk -F', ' 'gsub("Battery 0: ","") {print $1" "$2}')
	: "${acpi##*\ }"
	per="${_%%%}"
	stat="${acpi%%\ *}"
   ((per>=60)) && color="%{F#0f0}"
   ((per<=45)) && color="%{F#4a0}"
   ((per<=20)) && color="%{F#890}"
   ((per<=20)) && color="%{F#f30}"
	export B="$stat ${color}${per}%%%{F-}"
}

keylock(){
	read -r KBL <"$HOME/.keylock"
	[[ $KBL = enable ]] && color="%{F#0f0}" || color="%{F#f00}"
	export KBL="${color}${KBL}d%{F-}"
}

update(){
	bat; ws; net; keylock
	export D="$(date '+%a %d %b %H:%M')"
	set $(df -h | grep "/$")
	export R="$4 ($5)"
	set $(df -h | grep "/home$")
	export H="$4 ($5)"
}

parse(){
   update
   printf '%s\n' " $W %{r} keyboard $KBL | root ${R} | home ${H} | $B | $N | $D | "
}

printb(){
		  echo print_bar
	#while :; do parse; read -rt 10 _; done < <(bspc subscribe desktop_focus) | lemonbar -p ${opt[@]}\
	while :; do parse; read -rt 10 _; done < "$PANELFIFO" | lemonbar -p ${opt[@]}\
   -g 1366x20\
   -b\
   -B "#000"\
   -F "#fff"\
   -f "ypn envypn:size=10"\
   -u 2 | while read -r line; do eval "$line"; done
		echo done
   #-o 1\
		  echo print_done
}

main(){
   trap 'bspc config bottom_padding 0; pkill lemonbar' EXIT
   #source /home/ringdal/.cache/wal/colors.sh

   ((updint=10))

   for((;;)){ net; sleep 30; } & loop="$!"
   #for((;;)){ update; sleep $updint; } &

	ws
	update
	printb
}

main "$@"
