#!/usr/bin/env bash
# cast
# small cli wrapper for the program castnow

get_saved(){
   saved="$HOME/.config/castnow/cast.conf"
   [[ -f "$saved" ]] &&
      read -r dev < "$saved" || prompt_devices
   # tilfÃ¸j skrivning af saved fil
}

proggress(){
   progfile="${movie%.*}.prog"
   [[ -f "$progfile" ]] || return 1

   read -r pro < "$progfile"
   o+=("--seek" "$prog")
   echo "found prog file: $prog"
}

cast(){
   castnow --address "$ip" "${o[@]}";
   ((SECONDS>60)) && read -rp "save proggress? [y/N]: "
   case $REPLY in
      y) printf '%02d:%02d:%02d' "$((SECONDS/60/60))"\
	    "$((SECONDS/60%60))" "$((SECONDS%60))" > "$prog" ;;
      *) exit 0
   esac
}

prompt_devices(){
   local_ip=$(ip a show wlp3s0 | awk '/inet / {print $2}')
   [[ -z "$local_ip" || -z "$@" ]] &&
      { echo "no connection"; exit 1; }

   printf '\n%s' "Searching local network..."
   i=0; get_devices

   read -rp $'\n\n'"ip to use: "
   ip="${ip[((REPLY-1))]}"
}

get_devices(){
   while read -r line; do
      ((i<1)) && printf '\r\e[K%s\t\t\t\t%s\n'\
         "IP Address:" "MAC Address:"
      if [[ "$line" =~ ^[0-9][0-9][0-9].* ]]
	       then ip+=($line);((i++)); printf '%s ' "$i: $line"
	       else printf '\t%s\t%s\n' "-" "$line"
      fi
   done < <(sudo nmap -sn $local_ip | awk -F" " '
	    /MAC Address:/ {print $3" "$4" "$5}
	    /Nmap scan/ {print $5}')
}

main(){
   movie="$1"; shift
   o=("$movie" "$@")
   proggress
   cast "${o[*]}"
}

main "$@"
