#!/usr/bin/env bash
# cast
# small cli wrapper for the program castnow from xat/castnow

setup(){ printf '\e[H\e[J%s' ""; }

get_opts(){ movie="$1"; shift; o=("$movie" "$@"); }

get_prog(){
   progfile="${movie%.*}.prog"
   [[ -f "$progfile" ]] || return 1

   echo "found prog file: $progfile"
   read -r prog < "$progfile"
   o+=("--seek" "$prog")
}

cast(){ screen -d -m -S cast castnow "${o[@]}"; }

player_ctl(){
   
   cmd=(screen -S cast -X stuff)
   while read -rsn1;do
      case $REPLY in
              q) screen -S cast -X quit; break ;;
         \ |' ') "${cmd[@]}" ' '; ((paused=SECONDS)) ;;
              m) "${cmd[@]}" 'm' ;;
              t) "${cmd[@]}" 't' ;;
              n) "${cmd[@]}" 'n' ;;
              s) "${cmd[@]}" 's' ;;
      k|$'\e[A') "${cmd[@]}" $'\e[A' ;;
      j|$'\e[B') "${cmd[@]}" $'\e[B' ;;
      h|$'\e[D') "${cmd[@]}" $'\e[D' ;;
      l|$'\e[C') "${cmd[@]}" $'\e[C' ;;
      esac
   done

   ((sec=SECONDS-paused))
   ((SECONDS>60)) && read -rp "save proggress? [y/N]: "
   [[ "$REPLY" = "y" ]] && printf '%02d:%02d:%02d' "$((sec/60/60))"\
	    "$((sec/60%60))" "$((sec%60))" > "$progfile"
}

get_devices(){ ((i=0))
   printf '\n%s' "Searching local network..."
   while read -r line; do
      ((i<1)) && printf '\r\e[K%s\t\t\t\t%s\n' "IP Address:" "MAC Address:"
      [[ "$line" =~ ^[0-9][0-9][0-9].* ]] || { printf '\t%s\t%s\n' "-" "$line"; return;}

      ip+=($line); ((i++))
      o+=(--address "$ip")
      printf '%s ' "$i: $line"
   done < <(\
   sudo nmap -sn $local_ip | awk -F" " '
      /MAC Address:/ {print $3" "$4" "$5}
      /Nmap scan/ {print $5}')
   read -rp $'\n\n'"ip to use: "
   ip="${ip[((REPLY-1))]}"
}

main(){
   local_ip=$(ip a show wlp3s0 | awk '/inet / {print $2}')
   [[ "$local_ip" ]] || { echo "no connection"; exit 1; }

   get_opts
   get_prog
   get_devices
   cast
   player_ctl
}

main "$@"
