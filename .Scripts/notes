#!/usr/bin/env bash

fz(){ fzf --ansi --height 40% --reverse "$@";}

editor(){ nvim +"set ft=markdown" "$@";}

new(){
   cd "$NOTES"
   #print_tags | editor +startinsert +"file new_note.md"
   editor +startinsert +"file new_note.md"
}

edit(){
   note="$NOTES/$(print_notes | fz)"
   [[ -f "$note" ]] && editor "$note"
   exit 0
}

sync(){
   cd "$NOTES"
   status=$(git status --porcelain)
   [[ -z "$status" ]] && pull || push
}

show(){
   [[ "$NOTES" ]] || return 1
   cd "$NOTES"; fd -d 2 -c always .
   exec $SHELL # creates a subshell in PWD
}

push(){
   git add .; git commit -m "$status"
   git push -u origin master
}

pull(){
   printf '%s\n' "No changes, checking remote.."
   git pull
}

print_notes(){
   IFS=$'\n' read -rd '' -a notes < <(fd -c always .md $NOTES)
   printf '%s\n' "${notes[@]#*${NOTES##*/}/}"
}

print_tags(){
   printf '\n\n%s\n%s' "[//]: # ($(date -Iseconds))"\
      "[//]: # (tags: [<++>])"
}

print_opts(){
   opts=("new" "sync" "edit" "show")
   printf '%s\n' "${opts[@]}"
}

get_opts(){
   opt=$(print_opts | fz -0 -1 -q "$1")
   [[ $opt ]] || false
}

main(){
   get_opts $1 || exit
   eval $opt
}

main "$@"
