#!/usr/bin/env bash

fz(){ fzf --ansi --height 40% --reverse "$@"; }

new(){
   cd $NOTES
   print_tags | nvim -c startinsert .md
}

edit(){
   note="$NOTES/$(print_notes | fz)"
   [[ -f "$note" ]] && nvim -c Goyo "$note"
   exit 0
}

sync(){
   cd $NOTES
   status=$(git status --porcelain)
   [[ -z "$status" ]] && pull || push
}

commit(){
   printf '%s\n' "$status"
   git add .; git commit -am "$status"
}

push(){
   commit
   git push -u origin master
}

pull(){
   printf '%s\n%s\n' "ingen Ã¦ndinger" "tjekker remote"
   git pull
}

print_notes(){
   IFS=$'\n' read -rd '' -a notes < <(fd -c always .md $NOTES)
   printf '%s\n' "${notes[@]#*${NOTES##*/}/}"
}

print_tags(){
   printf '\n\n%s\n%s' "[//]: # ($(date -Iseconds))"\
      "[//]: # (tags: [<++>])"
}

print_opts(){
   opts=("new" "sync" "edit")
   printf '%s\n' "${opts[@]}"
}

get_opts(){
   opt=$(print_opts | fz -0 -1 -q "$1")
   [[ $opt ]] || false
}

main(){
   get_opts $1 || exit
   printf '\e[A\e[K%s\n' "$PS1 notes $opt"
   case $opt in new) new ;; sync) sync ;; edit) edit; esac
}

main "$@"
