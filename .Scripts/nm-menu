#!/usr/bin/env bash

reset(){ printf '\e[?25l\e[2J\e[H'; }
con-up() { nmcli c u "$1" ;}
con-down() { nmcli c dow "$1" ;}

a_in(){
	printf '\e[%sH\e[2C' "$((p+2))"; tr=
	for i in "${ai[@]}" ;{ printf '\e[K\r\e[2C\e[m\e[1;36m%s\e[s' "$i"; read -t $at; }
	for i in " " y "|" n " ";{ tr+="$i"; printf '\e[u%s' "$tr"; read -t $at; }
}

a_out(){
	printf '\e[?25l\e[%sD' "${#tr}"
	for ((i=-4;i<${#tr};i++)){ tr=${tr%?}; printf '\e[K%s\e[%sD' "$tr" "${#tr}"; read -t $at; }
	for i in "${ao[@]}"  ;{ printf '\r\e[K\e[2C\e[1;36m%s\e[s\e[m' "$i"; read -t $at; }
}

parse_animation(){
	t="${o[p]}"; at="0.02"; st="2"
	ai=("> $t" ">$t" "$t>" "$t >")
	ao=("$t>" "$t>" ">$t " "> $t")
}

read_confirm(){ read -rsn1 -p $'\e[?25h'; case_confirm $REPLY; }

case_confirm(){
	case $1 in
		''|y) ans="${o[p]}"; return 0 ;;
		q) exit 0 ;;
		h|$'\177') return ;;
		*) read_confirm $1 ;;
	esac
}

confirm(){ parse_animation; reset; printl; a_in; read_confirm; a_out; }

printl(){
	printf '\e[1m%s\e[m' "$2"
	for ((i=0;i<=${#o[@]};i++)); do case $i in
		$p) printf '\n\e[2C\e[1;36m> %s\e[m' "${o[p]}" ;;
		*) printf '\n\e[m\e[2C  %s' "${o[i]}"
	esac; done
}

menu(){
	IFS=$'\n' read -rd '' -a o <<<"$1"
	for((;;)){ reset; printl; read -rsn1 key; case_key "$key"; }
}

case_key(){
    [[ $1 == $'\e' ]] && {
        read -rsn 2
        [[ ${1}${REPLY} == $'\e\e['* ]] && read -rsn 1 _
        local e=${1}${REPLY}
    }
	case ${e:-$1} in
		k|$'\e[A') ((p=p>0?p-1:0)) ;;
		j|$'\e[B') ((p=p<${#o[@]}-1?p+1:${#o[@]}-1)) ;;
		''|l) confirm ;;
		$'\e'|q) exit 0 ;;
	esac
}

new-con(){
   dunstify -t 10000 -r 202 "" "<b>nmcli searching.. please wait</b>"
   ssid=$(nmcli -f SSID d w l | sed '/SSID/d;s/ *//g')
   dunstify -C 202

   ans=$(echo "$ssid" | menu "[ new connection ]")
   [[ $ans ]] || exit 0
      
   passwd=$(menu "[ passwd ]")
   [[ $passwd ]] || exit 0

   nmcli d w c "$ssid" password "$passwd"
}

del-con(){
   ans=$(printf '%s\n' "$con" | rofi -dmenu -i -p "[ delete connection ]" | sed 's/\ *$//g')
   nmcli c de "$ans"
}

main() {
	trap "printf '\e[m\e[2J\e[H\e[?25h\e[?1049l'" EXIT
	printf '\e[?1049h'
	p=0
   con=$(nmcli -f NAME c s -o +a:-type | sed '/NAME/d;s/ *$//g')
   active_con=$(nmcli -f NAME c s -a | sed '/NAME/d;s/ *$//g')
   active="[*] $active_con"
   new="[+] New Connection"
   del="[-] Delete Connection"

   [[ $active_con ]] && con=$(printf '%s\n' "${con/$active_con/$active}")
   out=$(printf '%s\n%s\n%s' "$con" "$new" "$del")
   menu "$out" "nmcli:"

   case $ans in
      "$new") new-con ;;
      "$del") del-con ;;
      "$active") con-down "${active_con}" ;;
      *) con-up "$ans" ;;
   esac
}

main "$@"
