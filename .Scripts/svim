#!/usr/bin/env bash

config(){

   DIRS=("$HOME/.Scripts/*" "$HOME/.bin/*") # Dirs to include
   SON="1" # Search on open 1=on 0=off

}
get_size(){ read -r LINES COLUMNS < <(stty size); }
reset(){ printf '\e[?25l\e[2J\e[0;%sr\e[H' "(($LINES-1))"; }
refresh(){ reset; get_size; o=(); op=()
   for f in "${DIRS[@]}"; do op+=($f); done
   o=(${op[@]}); print_l "${o[@]}"; }
search(){ printf '\e[?6l\e[%sH\e[?25h' "$LINES"
   while IFS= read -rsn 1 -p $'\r\e[K'"/${srch}" search; do
      case $search in
	 $'\177') [[ -z $srch ]] && break; srch="${srch%?}" ;;
         $'\033') refresh; srch=""; break ;;
	 $'\015') ((${#o[@]}<=1)) && nvim "${o[$p]}"; break ;;
	 " "|*) srch+="$search";;
      esac
      printf '\e[?6l\e[2J\e[%sH\e[?25h' "$LINES"
      o=();p=0; for s in ${op[@]}; do o+=(${s%"${s%/"$srch"*}"}); done
      print_l "${o[@]}"; printf '\e[%sH' "$LINES"
   done; printf '\e[2K\e[?6h\e[?25l'; }
print_l(){ printf '\e[H'
   for s in "$@"; do case $s in
	 ${o[$p]}) printf '\e[7m%s\e[m\n' "${s##*/}" ;;
         *) printf '\e[m%s\n' "${s##*/}"
   esac; done; }
key(){ case $1 in
      k) ((p>0))&&((p--)) ;;
      K) ((p>5))&&((p-=5))||((p=0)) ;;
      j) ((p<(${#o[@]})-1)) && ((p++)) ;;
      J) ((p<(${#o[@]})-6))&&((p+=5))||((p=${#o[@]}-1)) ;;
      g) read -rsn1 a;[[ $a = "g" ]]&&p=0 ;;
      G) ((p=${#o[@]}-1)) ;;
      c) read -rsn1 a; [[ $a = "c" ]]&& p=0 && refresh; ;;
      $'\015'|l) nvim "${op[$p]}" ;;
      /) search ;;
      q) exit 0
   esac; }
main(){ trap "printf '\e[m\e[2J\e[H\e[?25h'" EXIT
   trap "get_size" WINCH
   config; refresh; (($SON>0))&&search
   for((;;)){ read -rsn1 a; key "$a"; reset; print_l "${o[@]}"; }; }
main
