#!/usr/bin/env bash

reset(){
   printf '\e[?25l\e[2J\e[H'
   [[ $m ]] && printf '%s\n' "$m"
}

confirm(){
   printf '\e[H\e[J%s\e[?25h' "want to ${o[$p]}? [y/N] "

   while read -rsn1 a
   do
      case $a in y|Y) bash "${o[$p]}";; n|N)exit 0;; *)break; esac
   done
}

printl(){ 
   for s in "${o[@]}"; do
      case $s in
         ${o[$p]}) printf '\n\e[7m%s\e[m' "$s" ;;
         *) printf '\n\e[m%s' "$s"
      esac
   done
}

key(){
   case $1 in
      k) ((p>0))&&((p--)) ;;
      j) (((p+1)<${#o[@]}))&&((p++)) ;;
      ''|l) confirm ;;
      q) exit 0
   esac
}

main(){
   trap "printf '\e[m\e[2J\e[H\e[?25h'" EXIT

   p=0;o=()

   getopts "m:" s && m="${OPTARG}" && shift 2
   while [[ $1 ]]; do o+=($1); shift; done

   for((;;)){ reset; printl "${o[@]}"; read -rsn1 a; key "$a"; }
   }

main "$@"
