#!/usr/bin/env bash
# cast
# small cli wrapper for the program castnow from xat/castnow

get_opts(){ movie="$1"; shift; o=("$movie" "$@"); }

get_prog(){
   progfile="${movie%.*}.prog"
   [[ ! -a "$progfile" ]] && return 1

   read -r prog < "$progfile"
   echo "found prog file: $progfile ($prog)"
   o+=("--seek" "$prog")
   IFS=':' read -r h m s < "$prog"
   ((prog=(h*60*60)+(m*60)+s,sec+=prog))
}

write_prog(){
   ((sec=SECONDS-sec))
   read -rp "save proggress? ($((sec/3600)):$((sec/60%60)):$((sec%60))) [y/N]: "
   case "$REPLY" in 
      y|Y) printf '%02d:%02d:%02d\n' "$((sec/3600))"\
	 "$((sec/60%60))" "$((sec%60))" > "$progfile"
	 ;;
     *) printf '%s\n' "Proggress not saved."
  esac
}

_cast(){ ((sec=SECONDS)); castnow --address "$ip" "${o[@]}" || echo "vpn?"; }

get_devices(){
   printf '\n%s' "Searching local network..."
   while read -r line; do
      ((i<1)) && printf '\r\e[K%s\t\t\t\t%s\n' "IP Address:" "MAC Address:"

      [[ "$line" =~ ^[0-9][0-9][0-9].* ]] && {
         ipa+=("$line"); ((i++))
         printf '%s ' "$i: $line"
      } || printf '\t%s\t%s\n' "-" "$line"

   done < <(sudo nmap -sn "$local_ip" | awk -F" " '
      /MAC Address:/ {print $3" "$4" "$5}
      /Nmap scan/ {print $5}')

   read -rp $'\n\n'"ip to use: "
   ip="${ipa[((REPLY-1))]}"
}

main(){
   local_ip=$(ip a show wlp3s0 | awk '/inet / {print $2}')
   [[ "$local_ip" ]] || { echo "no connection"; exit 1; }
   [[ "$1" ]] && get_opts "$@" || exit 1
   ((sec=0,i=0))

   get_prog
   get_devices
   _cast
   write_prog
}

main "$@"
