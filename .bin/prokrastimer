#!/usr/bin/env bash
# Prokrastimer
# Over-engineered pomodoro timer

clean() {
	[[ "${FUNCNAME[1]}" = "prompt" ]] && return
	printf '\e[2J\e[H\e[1;34m%s\n' "$logo"
   width=$(tput cols); ((width-=2))
}

bar() {
   printf -v elaps "%$(($1*$width/$2))s"
   printf -v total "%$(($width-($1*$width/$2)))s"
   printf '\e[J\e[%s;0H%s\r' "$width" "[${elaps// /\#}${total// /-}]"
}

prompt() {
   read -rp $'\e[10;0H\e[1;37m'"work in min. (25): "$'\e[m' work
   read -rp $'\e[1;37m'"breaks in min. (5): "$'\e[m' break
   read -rp $'\e[1;37m'"number of sessions (3): "$'\e[m' ss
	((work=work?work*60:1500,break=break?break*60:300,ss=ss?ss*2:6))
}

next_state() {
	state_done
	((c=c?0:1,ct=c?ct:ct++))
   read -rp $'\e[11;0H\e[1;33m'"press ENTER to start ${s[c]}"$'\r'
}

state_done() {
   play "$HOME/.bin/.prokrastimer/gong.wav" 2>/dev/null &
   notify-send "${s[c]} completed"
   printf '\e[10;0H\e[J\e[1;39m%s' "${s[c]} completed"
}

completed() { clean
	((total=(ct*work)+sec))
	printf '\e[7;0H\e[1;33m%s%2dh%2dm\e[?25h\n' "combined time worked:"\
		"$((total/60/60))" "$((total/60%60))"
}

timer() {
	for ((sec=s[c],st=SECONDS;sec>0;sec=(s[c]-(SECONDS-st)))){
      printf '\e[?25l\e[10;0H\e[1;35m%s%02d:%02d'\
			"${s[c]} left: " "$((sec/60))" "$((sec%60))"
      bar $((SECONDS-st)) "${s[c]}"
		sleep 1
	}
}

main() {
   trap "completed; stty echo" EXIT
	trap "printf '\e[A';exit" SIGINT
	trap 'clean' SIGWINCH

	logo=$(figlet prokrastimer) # change this
	s=( "work" "break" )

   clean; prompt; stty -echo
   for ((i=2;i<=ss;i++)){ clean; timer; ((i==ss)) && break; next_state;}
}

main
