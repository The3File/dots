# get current branch in git repo
parse_git_branch(){
   BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`

   [[ "${BRANCH}" ]] && {
      STAT=`parse_git_dirty`
	 echo "[${BRANCH}${STAT}] "
      } || echo ""
}

dots(){
   dots=$(git --git-dir=$HOME/.dotfiles/\
      --work-tree=$HOME status --porcelain)
   [[ "$dots" ]] && echo "!"
}

# get current status of git repo
parse_git_dirty(){

   status=`git status 2>&1 | tee`

   dirty=`echo -n "${status}" 2> /dev/null |\
      grep "modified:" &> /dev/null; echo "$?"`
   untracked=`echo -n "${status}" 2> /dev/null |\
      grep "Untracked files" &> /dev/null; echo "$?"`
   ahead=`echo -n "${status}" 2> /dev/null |\
      grep "Your branch is ahead of" &> /dev/null; echo "$?"`
   newfile=`echo -n "${status}" 2> /dev/null |\
      grep "new file:" &> /dev/null; echo "$?"`
   renamed=`echo -n "${status}" 2> /dev/null |\
      grep "renamed:" &> /dev/null; echo "$?"`
   deleted=`echo -n "${status}" 2> /dev/null |\
      grep "deleted:" &> /dev/null; echo "$?"`

   bits=''
   [[ "${renamed}" == "0" ]] && bits=">${bits}"
   [[ "${ahead}" == "0" ]] && bits="*${bits}"
   [[ "${newfile}" == "0" ]] && bits="+${bits}"
   [[ "${untracked}" == "0" ]] && bits="?${bits}"
   [[ "${deleted}" == "0" ]] && bits="x${bits}"
   [[ "${dirty}" == "0" ]] && bits="!${bits}"
   [[ ! "${bits}" == "" ]] && echo " ${bits}"
}

export PROMPT_COMMAND='history -a; history -r'
export PS1="\[\e[0;36m\]\w\[\e[m\] \[\e[1;35m\]\`parse_git_branch\`\[\e[m\]\[\e[0;33m\]\`dots\`\\$\[\e[m\] "
