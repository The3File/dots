#!/usr/bin/env bash
# the3file

config() {

	bspc monitor -d 1 2 3 4 5 6 7 8 9 10

	## COLORS ##
	source "$HOME/.cache/wal/colors.sh"
	BORDER_COLOR="${color4}"
	BACKGROUND_COLOR="${color0}"
	bspc config focused_border_color    "$BORDER_COLOR"
	bspc config presel_feedback_color   "$BORDER_COLOR"
	bspc config normal_border_color		"$BACKGROUND_COLOR"


	## GAPS AND BORDERS ##
	BORDER_WIDTH="1"
	BORDER_RADIUS="10"
	WINDOW_GAP="10"

	bspc config border_width            "$BORDER_WIDTH"
	bspc config border_radius           "$BORDER_RADIUS"
	bspc config window_gap					"$WINDOW_GAP"

	bspc config gapless_monocle			true				# true | false
	bspc config borderless_monocle		true				# true | false
	bspc config single_monocle				false				# true | false
	bspc config center_pseudo_tiled     true				# true | false


	## RATIOS AND WM SCHEMES ##
	bspc config split_ratio             0.55				# float
	bspc config automatic_scheme			spiral 			# longest_side | alternate | spiral
	bspc config initial_polarity			second_child 	# second_child | first_child


	## MISC. ##
	bspc config click_to_focus				button1 			# none | button1 | button2 | button3 | any

}


autogap_settings() { 
	# gaps
	export GAPS=1  # enable or disable automatic gaps
	export G0=5    # minimum gap size
	export GS=7    # gaps size integer
	export GN=3    # number of windows

	# left and right padding
	export PADD=1  # enable or disable automatic padding
	export PS=15    # padding size integer
	export PN=2    # number of windows before 0
}



rules() { 
	bspc rule -r "*"

	bspc config external_rules_command "$(which external_rules)"

	bspc rule -a Zathura state=tiled
	bspc rule -a float sticky=off state=floating 
	bspc rule -a follow sticky=on state=floating 
	bspc rule -a fullscreen sticky=off state=fullscreen layer=above
	bspc rule -a gass sticky=on state=floating focus=off border=on
	bspc rule -a files layer=above locked=on sticky=on state=floating hidden=on
	bspc rule -a scratchterm layer=above locked=on sticky=on state=floating
	bspc rule -a scratchmath rectangle="1000x400+900+620" layer=above locked=on sticky=on state=floating
	bspc rule -a jetbrains-studio manage=on # Android Studio startup window
	bspc rule -a Bar layer=below

}


apps() { 
	_restart(){ ukill -k "$1" 1>/dev/null || return 1
	"$1" "${o[@]}" &>/dev/null & disown &&
	printf '\e[33m%s: %s\n' "$1" "restarted"; }
	_start(){ "$1" "${o[@]}" &>/dev/null & disown || return 1
	printf '\e[37m%s: %s\n' "$1" "started"; }

	apps=(runbar acpid_events dunst autogap swallow)
	
	for app in "${apps[@]}"; do
		app_is_running="$(ps ax | sed -n "/nvim/d;/sed/d;/\<$app\>/p")"

		if [[ "$app_is_running" ]]; then
			_restart $app || printf '\e[31m%s: %s\n' "$app" "restart failed"
		else
			_start $app || printf '\e[31m%s: %s\n' "$app" "failed"
		fi
	done
}


link_wal(){ 
	ln -sf "$HOME/.cache/wal/dunstrc" "$HOME/.config/dunst/dunstrc" &
	ln -sf "$HOME/.cache/wal/zathurarc" "$HOME/.config/zathura/zathurarc" &
}

main(){ 

	case $1 in 1|0) reason="$1"; shift; esac

	# bspwm settings
	config
	rules

	# external settings
	autogap_settings
	link_wal
	for dev in 1 2;{ pwrbtnlght off $dev; }

	# start/restart apps
	apps
}

# INIT
main "$@" &&
	{
		printf '\e[m\n%s\n' "..all done";
		dunstify "bspwmrc reloaded" -t 2000 -r 90211 &
		[[ -e "$GAPFIFO" ]] && { sleep .1; echo > $GAPFIFO; }
	}
#  vim: fdm=marker
